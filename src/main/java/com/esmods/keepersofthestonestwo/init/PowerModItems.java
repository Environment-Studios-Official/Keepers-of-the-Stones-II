
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package com.esmods.keepersofthestonestwo.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.common.ForgeSpawnEggItem;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.world.level.block.Block;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.BlockItem;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.client.renderer.item.ItemProperties;

import com.esmods.keepersofthestonestwo.procedures.StoneGetRechargeStateProcedure;
import com.esmods.keepersofthestonestwo.item.WaterStoneItem;
import com.esmods.keepersofthestonestwo.item.WaterKatanaItem;
import com.esmods.keepersofthestonestwo.item.WaterBatteryItem;
import com.esmods.keepersofthestonestwo.item.WaterArmorItem;
import com.esmods.keepersofthestonestwo.item.VacuumStoneItem;
import com.esmods.keepersofthestonestwo.item.VacuumDaggerItem;
import com.esmods.keepersofthestonestwo.item.VacuumBatteryItem;
import com.esmods.keepersofthestonestwo.item.VacuumArmorItem;
import com.esmods.keepersofthestonestwo.item.TornadoStoneItem;
import com.esmods.keepersofthestonestwo.item.TornadoBatteryItem;
import com.esmods.keepersofthestonestwo.item.TornadoAxeItem;
import com.esmods.keepersofthestonestwo.item.TornadoArmorItem;
import com.esmods.keepersofthestonestwo.item.TimeStoneItem;
import com.esmods.keepersofthestonestwo.item.TimeKhopeshItem;
import com.esmods.keepersofthestonestwo.item.TimeBatteryItem;
import com.esmods.keepersofthestonestwo.item.TimeArmorItem;
import com.esmods.keepersofthestonestwo.item.TeleportationStoneItem;
import com.esmods.keepersofthestonestwo.item.TeleportationBladeItem;
import com.esmods.keepersofthestonestwo.item.TeleportationBatteryItem;
import com.esmods.keepersofthestonestwo.item.TeleportationArmorItem;
import com.esmods.keepersofthestonestwo.item.TechnologyStoneItem;
import com.esmods.keepersofthestonestwo.item.TechnologyBatteryItem;
import com.esmods.keepersofthestonestwo.item.TechnologyArmorItem;
import com.esmods.keepersofthestonestwo.item.TechnoPickaxeItem;
import com.esmods.keepersofthestonestwo.item.SunStoneItem;
import com.esmods.keepersofthestonestwo.item.SunBatteryItem;
import com.esmods.keepersofthestonestwo.item.SunArmorItem;
import com.esmods.keepersofthestonestwo.item.SpiritStoneItem;
import com.esmods.keepersofthestonestwo.item.SpeedStoneItem;
import com.esmods.keepersofthestonestwo.item.SpeedBatteryItem;
import com.esmods.keepersofthestonestwo.item.SpeedArmorItem;
import com.esmods.keepersofthestonestwo.item.SpaceStoneItem;
import com.esmods.keepersofthestonestwo.item.SpaceBatteryItem;
import com.esmods.keepersofthestonestwo.item.SpaceArmorItem;
import com.esmods.keepersofthestonestwo.item.SoundStoneItem;
import com.esmods.keepersofthestonestwo.item.SoundDaggerItem;
import com.esmods.keepersofthestonestwo.item.SoundBatteryItem;
import com.esmods.keepersofthestonestwo.item.SoundArmorItem;
import com.esmods.keepersofthestonestwo.item.SolarBladeItem;
import com.esmods.keepersofthestonestwo.item.SmokeStoneItem;
import com.esmods.keepersofthestonestwo.item.ShadowStoneItem;
import com.esmods.keepersofthestonestwo.item.ShadowScytheItem;
import com.esmods.keepersofthestonestwo.item.ShadowBatteryItem;
import com.esmods.keepersofthestonestwo.item.ShadowArmorItem;
import com.esmods.keepersofthestonestwo.item.SandStoneItem;
import com.esmods.keepersofthestonestwo.item.SandSaberItem;
import com.esmods.keepersofthestonestwo.item.SandBatteryItem;
import com.esmods.keepersofthestonestwo.item.SandArmorItem;
import com.esmods.keepersofthestonestwo.item.RightMetalGauntletItem;
import com.esmods.keepersofthestonestwo.item.RawEnergiumItem;
import com.esmods.keepersofthestonestwo.item.RawDepletedEnergiumItem;
import com.esmods.keepersofthestonestwo.item.RawCopyriumItem;
import com.esmods.keepersofthestonestwo.item.RawAmplifierItem;
import com.esmods.keepersofthestonestwo.item.RainStoneItem;
import com.esmods.keepersofthestonestwo.item.RainBowItem;
import com.esmods.keepersofthestonestwo.item.RainBatteryItem;
import com.esmods.keepersofthestonestwo.item.RainArmorItem;
import com.esmods.keepersofthestonestwo.item.PoisonStoneItem;
import com.esmods.keepersofthestonestwo.item.PoisonBowItem;
import com.esmods.keepersofthestonestwo.item.PoisonBatteryItem;
import com.esmods.keepersofthestonestwo.item.PoisonArmorItem;
import com.esmods.keepersofthestonestwo.item.PlantsStoneItem;
import com.esmods.keepersofthestonestwo.item.PlantsBatteryItem;
import com.esmods.keepersofthestonestwo.item.PlantsArmorItem;
import com.esmods.keepersofthestonestwo.item.PlagueStoneItem;
import com.esmods.keepersofthestonestwo.item.OceanicTridentItem;
import com.esmods.keepersofthestonestwo.item.OceanStoneItem;
import com.esmods.keepersofthestonestwo.item.OceanBatteryItem;
import com.esmods.keepersofthestonestwo.item.OceanArmorItem;
import com.esmods.keepersofthestonestwo.item.MusicStoneItem;
import com.esmods.keepersofthestonestwo.item.MusicGuitarItem;
import com.esmods.keepersofthestonestwo.item.MusicDiscCallOfThePastItem;
import com.esmods.keepersofthestonestwo.item.MusicDiscAncientMoodItem;
import com.esmods.keepersofthestonestwo.item.MusicBatteryItem;
import com.esmods.keepersofthestonestwo.item.MusicArmorItem;
import com.esmods.keepersofthestonestwo.item.MushroomsStoneItem;
import com.esmods.keepersofthestonestwo.item.MushroomsHammerItem;
import com.esmods.keepersofthestonestwo.item.MushroomsBatteryItem;
import com.esmods.keepersofthestonestwo.item.MushroomsArmorItem;
import com.esmods.keepersofthestonestwo.item.MoonStoneItem;
import com.esmods.keepersofthestonestwo.item.MoonDoubleSidedSpearItem;
import com.esmods.keepersofthestonestwo.item.MoonBatteryItem;
import com.esmods.keepersofthestonestwo.item.MoonArmorItem;
import com.esmods.keepersofthestonestwo.item.MistyFanItem;
import com.esmods.keepersofthestonestwo.item.MistStoneItem;
import com.esmods.keepersofthestonestwo.item.MistBatteryItem;
import com.esmods.keepersofthestonestwo.item.MistArmorItem;
import com.esmods.keepersofthestonestwo.item.MindStoneItem;
import com.esmods.keepersofthestonestwo.item.MetalStoneItem;
import com.esmods.keepersofthestonestwo.item.MetalBatteryItem;
import com.esmods.keepersofthestonestwo.item.MetalArmorItem;
import com.esmods.keepersofthestonestwo.item.MercuryStoneItem;
import com.esmods.keepersofthestonestwo.item.MercuryBattleAxeItem;
import com.esmods.keepersofthestonestwo.item.MercuryBatteryItem;
import com.esmods.keepersofthestonestwo.item.MercuryBallItem;
import com.esmods.keepersofthestonestwo.item.MercuryArmorItem;
import com.esmods.keepersofthestonestwo.item.MagnetStoneItem;
import com.esmods.keepersofthestonestwo.item.MagnetClawsItem;
import com.esmods.keepersofthestonestwo.item.MagnetBatteryItem;
import com.esmods.keepersofthestonestwo.item.MagnetArmorItem;
import com.esmods.keepersofthestonestwo.item.MagicFireballItem;
import com.esmods.keepersofthestonestwo.item.LuckCoinItem;
import com.esmods.keepersofthestonestwo.item.LightningStoneItem;
import com.esmods.keepersofthestonestwo.item.LightningFalchionItem;
import com.esmods.keepersofthestonestwo.item.LightningBatteryItem;
import com.esmods.keepersofthestonestwo.item.LightningArmorItem;
import com.esmods.keepersofthestonestwo.item.LightSwordItem;
import com.esmods.keepersofthestonestwo.item.LightStoneItem;
import com.esmods.keepersofthestonestwo.item.LightBatteryItem;
import com.esmods.keepersofthestonestwo.item.LightArmorItem;
import com.esmods.keepersofthestonestwo.item.LeftMetalGauntletItem;
import com.esmods.keepersofthestonestwo.item.LavaStoneItem;
import com.esmods.keepersofthestonestwo.item.LavaHammerItem;
import com.esmods.keepersofthestonestwo.item.LavaBatteryItem;
import com.esmods.keepersofthestonestwo.item.LavaArmorItem;
import com.esmods.keepersofthestonestwo.item.IceStoneItem;
import com.esmods.keepersofthestonestwo.item.IceSpearItem;
import com.esmods.keepersofthestonestwo.item.IceBatteryItem;
import com.esmods.keepersofthestonestwo.item.IceArmorItem;
import com.esmods.keepersofthestonestwo.item.HighspeedDaggerItem;
import com.esmods.keepersofthestonestwo.item.GreenStaffItem;
import com.esmods.keepersofthestonestwo.item.GravityStoneItem;
import com.esmods.keepersofthestonestwo.item.GoldenDustStoneItem;
import com.esmods.keepersofthestonestwo.item.FreakingParsnipItem;
import com.esmods.keepersofthestonestwo.item.FreakingParshipSoupItem;
import com.esmods.keepersofthestonestwo.item.FormStoneItem;
import com.esmods.keepersofthestonestwo.item.FireSwordItem;
import com.esmods.keepersofthestonestwo.item.FireStoneItem;
import com.esmods.keepersofthestonestwo.item.FireBatteryItem;
import com.esmods.keepersofthestonestwo.item.FireArmorItem;
import com.esmods.keepersofthestonestwo.item.ExplosionStoneItem;
import com.esmods.keepersofthestonestwo.item.ExplosionMaceItem;
import com.esmods.keepersofthestonestwo.item.ExplosionBatteryItem;
import com.esmods.keepersofthestonestwo.item.ExplosionArmorItem;
import com.esmods.keepersofthestonestwo.item.EtherStoneItem;
import com.esmods.keepersofthestonestwo.item.EtherGlaiveItem;
import com.esmods.keepersofthestonestwo.item.EtherBatteryItem;
import com.esmods.keepersofthestonestwo.item.EtherArmorItem;
import com.esmods.keepersofthestonestwo.item.EnergyStoneItem;
import com.esmods.keepersofthestonestwo.item.EnergyStaffItem;
import com.esmods.keepersofthestonestwo.item.EnergyBatteryItem;
import com.esmods.keepersofthestonestwo.item.EnergyArmorItem;
import com.esmods.keepersofthestonestwo.item.EnergiumUpgradeSmithingTemplateItem;
import com.esmods.keepersofthestonestwo.item.EnergiumSwordItem;
import com.esmods.keepersofthestonestwo.item.EnergiumShovelItem;
import com.esmods.keepersofthestonestwo.item.EnergiumPickaxeItem;
import com.esmods.keepersofthestonestwo.item.EnergiumKeyItem;
import com.esmods.keepersofthestonestwo.item.EnergiumIngotItem;
import com.esmods.keepersofthestonestwo.item.EnergiumHoeItem;
import com.esmods.keepersofthestonestwo.item.EnergiumDustItem;
import com.esmods.keepersofthestonestwo.item.EnergiumCoreItem;
import com.esmods.keepersofthestonestwo.item.EnergiumAxeItem;
import com.esmods.keepersofthestonestwo.item.EnergiumArmorItem;
import com.esmods.keepersofthestonestwo.item.EmptyBatteryItem;
import com.esmods.keepersofthestonestwo.item.EarthStoneItem;
import com.esmods.keepersofthestonestwo.item.EarthHammerItem;
import com.esmods.keepersofthestonestwo.item.EarthBatteryItem;
import com.esmods.keepersofthestonestwo.item.EarthArmorItem;
import com.esmods.keepersofthestonestwo.item.DestructionStoneItem;
import com.esmods.keepersofthestonestwo.item.DestructionBroadswordItem;
import com.esmods.keepersofthestonestwo.item.DestructionBatteryItem;
import com.esmods.keepersofthestonestwo.item.DestructionArmorItem;
import com.esmods.keepersofthestonestwo.item.DepletedEnergiumIngotItem;
import com.esmods.keepersofthestonestwo.item.DarknessStoneItem;
import com.esmods.keepersofthestonestwo.item.CursedKeyItem;
import com.esmods.keepersofthestonestwo.item.CrystalStoneItem;
import com.esmods.keepersofthestonestwo.item.CrystalKnifeItem;
import com.esmods.keepersofthestonestwo.item.CrystalBatteryItem;
import com.esmods.keepersofthestonestwo.item.CrystalArmorItem;
import com.esmods.keepersofthestonestwo.item.CreationSwordItem;
import com.esmods.keepersofthestonestwo.item.CreationStoneItem;
import com.esmods.keepersofthestonestwo.item.CreationStaffItem;
import com.esmods.keepersofthestonestwo.item.CreationShovelItem;
import com.esmods.keepersofthestonestwo.item.CreationPickaxeItem;
import com.esmods.keepersofthestonestwo.item.CreationHoeItem;
import com.esmods.keepersofthestonestwo.item.CreationBatteryItem;
import com.esmods.keepersofthestonestwo.item.CreationAxeItem;
import com.esmods.keepersofthestonestwo.item.CreationArmorItem;
import com.esmods.keepersofthestonestwo.item.CopyriumIngotItem;
import com.esmods.keepersofthestonestwo.item.ConstellationSwordItem;
import com.esmods.keepersofthestonestwo.item.BlueFlameStoneItem;
import com.esmods.keepersofthestonestwo.item.BloodStoneItem;
import com.esmods.keepersofthestonestwo.item.BloodSickleItem;
import com.esmods.keepersofthestonestwo.item.BloodBatteryItem;
import com.esmods.keepersofthestonestwo.item.BloodArmorItem;
import com.esmods.keepersofthestonestwo.item.AnimalsStoneItem;
import com.esmods.keepersofthestonestwo.item.AnimalsHalberdItem;
import com.esmods.keepersofthestonestwo.item.AnimalsBatteryItem;
import com.esmods.keepersofthestonestwo.item.AnimalsArmorItem;
import com.esmods.keepersofthestonestwo.item.AmplifierRingItem;
import com.esmods.keepersofthestonestwo.item.AmplifierDropItem;
import com.esmods.keepersofthestonestwo.item.AmberStoneItem;
import com.esmods.keepersofthestonestwo.item.AmberStaffItem;
import com.esmods.keepersofthestonestwo.item.AmberBatteryItem;
import com.esmods.keepersofthestonestwo.item.AmberArmorItem;
import com.esmods.keepersofthestonestwo.item.AirStoneItem;
import com.esmods.keepersofthestonestwo.item.AirRapierItem;
import com.esmods.keepersofthestonestwo.item.AirBatteryItem;
import com.esmods.keepersofthestonestwo.item.AirArmorItem;
import com.esmods.keepersofthestonestwo.PowerMod;

@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
public class PowerModItems {
	public static final DeferredRegister<Item> REGISTRY = DeferredRegister.create(ForgeRegistries.ITEMS, PowerMod.MODID);
	public static final RegistryObject<Item> FIRE_STONE = REGISTRY.register("fire_stone", () -> new FireStoneItem());
	public static final RegistryObject<Item> AIR_STONE = REGISTRY.register("air_stone", () -> new AirStoneItem());
	public static final RegistryObject<Item> EARTH_STONE = REGISTRY.register("earth_stone", () -> new EarthStoneItem());
	public static final RegistryObject<Item> WATER_STONE = REGISTRY.register("water_stone", () -> new WaterStoneItem());
	public static final RegistryObject<Item> ETHER_STONE = REGISTRY.register("ether_stone", () -> new EtherStoneItem());
	public static final RegistryObject<Item> FIRE_ARMOR_HELMET = REGISTRY.register("fire_armor_helmet", () -> new FireArmorItem.Helmet());
	public static final RegistryObject<Item> FIRE_ARMOR_CHESTPLATE = REGISTRY.register("fire_armor_chestplate", () -> new FireArmorItem.Chestplate());
	public static final RegistryObject<Item> FIRE_ARMOR_LEGGINGS = REGISTRY.register("fire_armor_leggings", () -> new FireArmorItem.Leggings());
	public static final RegistryObject<Item> FIRE_ARMOR_BOOTS = REGISTRY.register("fire_armor_boots", () -> new FireArmorItem.Boots());
	public static final RegistryObject<Item> FIRE_SWORD = REGISTRY.register("fire_sword", () -> new FireSwordItem());
	public static final RegistryObject<Item> AIR_ARMOR_HELMET = REGISTRY.register("air_armor_helmet", () -> new AirArmorItem.Helmet());
	public static final RegistryObject<Item> AIR_ARMOR_CHESTPLATE = REGISTRY.register("air_armor_chestplate", () -> new AirArmorItem.Chestplate());
	public static final RegistryObject<Item> AIR_ARMOR_LEGGINGS = REGISTRY.register("air_armor_leggings", () -> new AirArmorItem.Leggings());
	public static final RegistryObject<Item> AIR_ARMOR_BOOTS = REGISTRY.register("air_armor_boots", () -> new AirArmorItem.Boots());
	public static final RegistryObject<Item> AIR_RAPIER = REGISTRY.register("air_rapier", () -> new AirRapierItem());
	public static final RegistryObject<Item> EARTH_ARMOR_HELMET = REGISTRY.register("earth_armor_helmet", () -> new EarthArmorItem.Helmet());
	public static final RegistryObject<Item> EARTH_ARMOR_CHESTPLATE = REGISTRY.register("earth_armor_chestplate", () -> new EarthArmorItem.Chestplate());
	public static final RegistryObject<Item> EARTH_ARMOR_LEGGINGS = REGISTRY.register("earth_armor_leggings", () -> new EarthArmorItem.Leggings());
	public static final RegistryObject<Item> EARTH_ARMOR_BOOTS = REGISTRY.register("earth_armor_boots", () -> new EarthArmorItem.Boots());
	public static final RegistryObject<Item> EARTH_HAMMER = REGISTRY.register("earth_hammer", () -> new EarthHammerItem());
	public static final RegistryObject<Item> WATER_KATANA = REGISTRY.register("water_katana", () -> new WaterKatanaItem());
	public static final RegistryObject<Item> WATER_ARMOR_HELMET = REGISTRY.register("water_armor_helmet", () -> new WaterArmorItem.Helmet());
	public static final RegistryObject<Item> WATER_ARMOR_CHESTPLATE = REGISTRY.register("water_armor_chestplate", () -> new WaterArmorItem.Chestplate());
	public static final RegistryObject<Item> WATER_ARMOR_LEGGINGS = REGISTRY.register("water_armor_leggings", () -> new WaterArmorItem.Leggings());
	public static final RegistryObject<Item> WATER_ARMOR_BOOTS = REGISTRY.register("water_armor_boots", () -> new WaterArmorItem.Boots());
	public static final RegistryObject<Item> ETHER_GLAIVE = REGISTRY.register("ether_glaive", () -> new EtherGlaiveItem());
	public static final RegistryObject<Item> ETHER_ARMOR_HELMET = REGISTRY.register("ether_armor_helmet", () -> new EtherArmorItem.Helmet());
	public static final RegistryObject<Item> ETHER_ARMOR_CHESTPLATE = REGISTRY.register("ether_armor_chestplate", () -> new EtherArmorItem.Chestplate());
	public static final RegistryObject<Item> ETHER_ARMOR_LEGGINGS = REGISTRY.register("ether_armor_leggings", () -> new EtherArmorItem.Leggings());
	public static final RegistryObject<Item> ETHER_ARMOR_BOOTS = REGISTRY.register("ether_armor_boots", () -> new EtherArmorItem.Boots());
	public static final RegistryObject<Item> ICE_STONE = REGISTRY.register("ice_stone", () -> new IceStoneItem());
	public static final RegistryObject<Item> ICE_ARMOR_HELMET = REGISTRY.register("ice_armor_helmet", () -> new IceArmorItem.Helmet());
	public static final RegistryObject<Item> ICE_ARMOR_CHESTPLATE = REGISTRY.register("ice_armor_chestplate", () -> new IceArmorItem.Chestplate());
	public static final RegistryObject<Item> ICE_ARMOR_LEGGINGS = REGISTRY.register("ice_armor_leggings", () -> new IceArmorItem.Leggings());
	public static final RegistryObject<Item> ICE_ARMOR_BOOTS = REGISTRY.register("ice_armor_boots", () -> new IceArmorItem.Boots());
	public static final RegistryObject<Item> LIGHTNING_STONE = REGISTRY.register("lightning_stone", () -> new LightningStoneItem());
	public static final RegistryObject<Item> LIGHTNING_ARMOR_HELMET = REGISTRY.register("lightning_armor_helmet", () -> new LightningArmorItem.Helmet());
	public static final RegistryObject<Item> LIGHTNING_ARMOR_CHESTPLATE = REGISTRY.register("lightning_armor_chestplate", () -> new LightningArmorItem.Chestplate());
	public static final RegistryObject<Item> LIGHTNING_ARMOR_LEGGINGS = REGISTRY.register("lightning_armor_leggings", () -> new LightningArmorItem.Leggings());
	public static final RegistryObject<Item> LIGHTNING_ARMOR_BOOTS = REGISTRY.register("lightning_armor_boots", () -> new LightningArmorItem.Boots());
	public static final RegistryObject<Item> MAGIC_FIREBALL = REGISTRY.register("magic_fireball", () -> new MagicFireballItem());
	public static final RegistryObject<Item> SOUND_STONE = REGISTRY.register("sound_stone", () -> new SoundStoneItem());
	public static final RegistryObject<Item> SOUND_ARMOR_HELMET = REGISTRY.register("sound_armor_helmet", () -> new SoundArmorItem.Helmet());
	public static final RegistryObject<Item> SOUND_ARMOR_CHESTPLATE = REGISTRY.register("sound_armor_chestplate", () -> new SoundArmorItem.Chestplate());
	public static final RegistryObject<Item> SOUND_ARMOR_LEGGINGS = REGISTRY.register("sound_armor_leggings", () -> new SoundArmorItem.Leggings());
	public static final RegistryObject<Item> SOUND_ARMOR_BOOTS = REGISTRY.register("sound_armor_boots", () -> new SoundArmorItem.Boots());
	public static final RegistryObject<Item> CRYSTAL_STONE = REGISTRY.register("crystal_stone", () -> new CrystalStoneItem());
	public static final RegistryObject<Item> CRYSTAL_ARMOR_HELMET = REGISTRY.register("crystal_armor_helmet", () -> new CrystalArmorItem.Helmet());
	public static final RegistryObject<Item> CRYSTAL_ARMOR_CHESTPLATE = REGISTRY.register("crystal_armor_chestplate", () -> new CrystalArmorItem.Chestplate());
	public static final RegistryObject<Item> CRYSTAL_ARMOR_LEGGINGS = REGISTRY.register("crystal_armor_leggings", () -> new CrystalArmorItem.Leggings());
	public static final RegistryObject<Item> CRYSTAL_ARMOR_BOOTS = REGISTRY.register("crystal_armor_boots", () -> new CrystalArmorItem.Boots());
	public static final RegistryObject<Item> LAVA_STONE = REGISTRY.register("lava_stone", () -> new LavaStoneItem());
	public static final RegistryObject<Item> LAVA_ARMOR_HELMET = REGISTRY.register("lava_armor_helmet", () -> new LavaArmorItem.Helmet());
	public static final RegistryObject<Item> LAVA_ARMOR_CHESTPLATE = REGISTRY.register("lava_armor_chestplate", () -> new LavaArmorItem.Chestplate());
	public static final RegistryObject<Item> LAVA_ARMOR_LEGGINGS = REGISTRY.register("lava_armor_leggings", () -> new LavaArmorItem.Leggings());
	public static final RegistryObject<Item> LAVA_ARMOR_BOOTS = REGISTRY.register("lava_armor_boots", () -> new LavaArmorItem.Boots());
	public static final RegistryObject<Item> RAIN_STONE = REGISTRY.register("rain_stone", () -> new RainStoneItem());
	public static final RegistryObject<Item> TORNADO_STONE = REGISTRY.register("tornado_stone", () -> new TornadoStoneItem());
	public static final RegistryObject<Item> OCEAN_STONE = REGISTRY.register("ocean_stone", () -> new OceanStoneItem());
	public static final RegistryObject<Item> PLANTS_STONE = REGISTRY.register("plants_stone", () -> new PlantsStoneItem());
	public static final RegistryObject<Item> ANIMALS_STONE = REGISTRY.register("animals_stone", () -> new AnimalsStoneItem());
	public static final RegistryObject<Item> METAL_STONE = REGISTRY.register("metal_stone", () -> new MetalStoneItem());
	public static final RegistryObject<Item> LIGHT_STONE = REGISTRY.register("light_stone", () -> new LightStoneItem());
	public static final RegistryObject<Item> SHADOW_STONE = REGISTRY.register("shadow_stone", () -> new ShadowStoneItem());
	public static final RegistryObject<Item> VACUUM_STONE = REGISTRY.register("vacuum_stone", () -> new VacuumStoneItem());
	public static final RegistryObject<Item> SUN_STONE = REGISTRY.register("sun_stone", () -> new SunStoneItem());
	public static final RegistryObject<Item> MOON_STONE = REGISTRY.register("moon_stone", () -> new MoonStoneItem());
	public static final RegistryObject<Item> SPACE_STONE = REGISTRY.register("space_stone", () -> new SpaceStoneItem());
	public static final RegistryObject<Item> TIME_STONE = REGISTRY.register("time_stone", () -> new TimeStoneItem());
	public static final RegistryObject<Item> BLOOD_STONE = REGISTRY.register("blood_stone", () -> new BloodStoneItem());
	public static final RegistryObject<Item> TECHNOLOGY_STONE = REGISTRY.register("technology_stone", () -> new TechnologyStoneItem());
	public static final RegistryObject<Item> TELEPORTATION_STONE = REGISTRY.register("teleportation_stone", () -> new TeleportationStoneItem());
	public static final RegistryObject<Item> EXPLOSION_STONE = REGISTRY.register("explosion_stone", () -> new ExplosionStoneItem());
	public static final RegistryObject<Item> AMBER_STONE = REGISTRY.register("amber_stone", () -> new AmberStoneItem());
	public static final RegistryObject<Item> CREATION_STONE = REGISTRY.register("creation_stone", () -> new CreationStoneItem());
	public static final RegistryObject<Item> DESTRUCTION_STONE = REGISTRY.register("destruction_stone", () -> new DestructionStoneItem());
	public static final RegistryObject<Item> MIST_STONE = REGISTRY.register("mist_stone", () -> new MistStoneItem());
	public static final RegistryObject<Item> SAND_STONE = REGISTRY.register("sand_stone", () -> new SandStoneItem());
	public static final RegistryObject<Item> SPEED_STONE = REGISTRY.register("speed_stone", () -> new SpeedStoneItem());
	public static final RegistryObject<Item> POISON_STONE = REGISTRY.register("poison_stone", () -> new PoisonStoneItem());
	public static final RegistryObject<Item> MAGNET_STONE = REGISTRY.register("magnet_stone", () -> new MagnetStoneItem());
	public static final RegistryObject<Item> MUSHROOMS_STONE = REGISTRY.register("mushrooms_stone", () -> new MushroomsStoneItem());
	public static final RegistryObject<Item> MERCURY_STONE = REGISTRY.register("mercury_stone", () -> new MercuryStoneItem());
	public static final RegistryObject<Item> MUSIC_STONE = REGISTRY.register("music_stone", () -> new MusicStoneItem());
	public static final RegistryObject<Item> PLAGUE_STONE = REGISTRY.register("plague_stone", () -> new PlagueStoneItem());
	public static final RegistryObject<Item> BLUE_FLAME_STONE = REGISTRY.register("blue_flame_stone", () -> new BlueFlameStoneItem());
	public static final RegistryObject<Item> GRAVITY_STONE = REGISTRY.register("gravity_stone", () -> new GravityStoneItem());
	public static final RegistryObject<Item> SMOKE_STONE = REGISTRY.register("smoke_stone", () -> new SmokeStoneItem());
	public static final RegistryObject<Item> FORM_STONE = REGISTRY.register("form_stone", () -> new FormStoneItem());
	public static final RegistryObject<Item> MIND_STONE = REGISTRY.register("mind_stone", () -> new MindStoneItem());
	public static final RegistryObject<Item> GOLDEN_DUST_STONE = REGISTRY.register("golden_dust_stone", () -> new GoldenDustStoneItem());
	public static final RegistryObject<Item> DARKNESS_STONE = REGISTRY.register("darkness_stone", () -> new DarknessStoneItem());
	public static final RegistryObject<Item> ENERGY_STONE = REGISTRY.register("energy_stone", () -> new EnergyStoneItem());
	public static final RegistryObject<Item> SPIRIT_STONE = REGISTRY.register("spirit_stone", () -> new SpiritStoneItem());
	public static final RegistryObject<Item> ICE_SPEAR = REGISTRY.register("ice_spear", () -> new IceSpearItem());
	public static final RegistryObject<Item> RAIN_ARMOR_HELMET = REGISTRY.register("rain_armor_helmet", () -> new RainArmorItem.Helmet());
	public static final RegistryObject<Item> RAIN_ARMOR_CHESTPLATE = REGISTRY.register("rain_armor_chestplate", () -> new RainArmorItem.Chestplate());
	public static final RegistryObject<Item> RAIN_ARMOR_LEGGINGS = REGISTRY.register("rain_armor_leggings", () -> new RainArmorItem.Leggings());
	public static final RegistryObject<Item> RAIN_ARMOR_BOOTS = REGISTRY.register("rain_armor_boots", () -> new RainArmorItem.Boots());
	public static final RegistryObject<Item> TORNADO_ARMOR_HELMET = REGISTRY.register("tornado_armor_helmet", () -> new TornadoArmorItem.Helmet());
	public static final RegistryObject<Item> TORNADO_ARMOR_CHESTPLATE = REGISTRY.register("tornado_armor_chestplate", () -> new TornadoArmorItem.Chestplate());
	public static final RegistryObject<Item> TORNADO_ARMOR_LEGGINGS = REGISTRY.register("tornado_armor_leggings", () -> new TornadoArmorItem.Leggings());
	public static final RegistryObject<Item> TORNADO_ARMOR_BOOTS = REGISTRY.register("tornado_armor_boots", () -> new TornadoArmorItem.Boots());
	public static final RegistryObject<Item> OCEAN_ARMOR_HELMET = REGISTRY.register("ocean_armor_helmet", () -> new OceanArmorItem.Helmet());
	public static final RegistryObject<Item> OCEAN_ARMOR_CHESTPLATE = REGISTRY.register("ocean_armor_chestplate", () -> new OceanArmorItem.Chestplate());
	public static final RegistryObject<Item> OCEAN_ARMOR_LEGGINGS = REGISTRY.register("ocean_armor_leggings", () -> new OceanArmorItem.Leggings());
	public static final RegistryObject<Item> OCEAN_ARMOR_BOOTS = REGISTRY.register("ocean_armor_boots", () -> new OceanArmorItem.Boots());
	public static final RegistryObject<Item> PLANTS_ARMOR_HELMET = REGISTRY.register("plants_armor_helmet", () -> new PlantsArmorItem.Helmet());
	public static final RegistryObject<Item> PLANTS_ARMOR_CHESTPLATE = REGISTRY.register("plants_armor_chestplate", () -> new PlantsArmorItem.Chestplate());
	public static final RegistryObject<Item> PLANTS_ARMOR_LEGGINGS = REGISTRY.register("plants_armor_leggings", () -> new PlantsArmorItem.Leggings());
	public static final RegistryObject<Item> PLANTS_ARMOR_BOOTS = REGISTRY.register("plants_armor_boots", () -> new PlantsArmorItem.Boots());
	public static final RegistryObject<Item> ANIMALS_ARMOR_HELMET = REGISTRY.register("animals_armor_helmet", () -> new AnimalsArmorItem.Helmet());
	public static final RegistryObject<Item> ANIMALS_ARMOR_CHESTPLATE = REGISTRY.register("animals_armor_chestplate", () -> new AnimalsArmorItem.Chestplate());
	public static final RegistryObject<Item> ANIMALS_ARMOR_LEGGINGS = REGISTRY.register("animals_armor_leggings", () -> new AnimalsArmorItem.Leggings());
	public static final RegistryObject<Item> ANIMALS_ARMOR_BOOTS = REGISTRY.register("animals_armor_boots", () -> new AnimalsArmorItem.Boots());
	public static final RegistryObject<Item> METAL_ARMOR_HELMET = REGISTRY.register("metal_armor_helmet", () -> new MetalArmorItem.Helmet());
	public static final RegistryObject<Item> METAL_ARMOR_CHESTPLATE = REGISTRY.register("metal_armor_chestplate", () -> new MetalArmorItem.Chestplate());
	public static final RegistryObject<Item> METAL_ARMOR_LEGGINGS = REGISTRY.register("metal_armor_leggings", () -> new MetalArmorItem.Leggings());
	public static final RegistryObject<Item> METAL_ARMOR_BOOTS = REGISTRY.register("metal_armor_boots", () -> new MetalArmorItem.Boots());
	public static final RegistryObject<Item> LIGHTNING_FALCHION = REGISTRY.register("lightning_falchion", () -> new LightningFalchionItem());
	public static final RegistryObject<Item> SOUND_DAGGER = REGISTRY.register("sound_dagger", () -> new SoundDaggerItem());
	public static final RegistryObject<Item> CRYSTAL_KNIFE = REGISTRY.register("crystal_knife", () -> new CrystalKnifeItem());
	public static final RegistryObject<Item> RAIN_BOW = REGISTRY.register("rain_bow", () -> new RainBowItem());
	public static final RegistryObject<Item> LAVA_HAMMER = REGISTRY.register("lava_hammer", () -> new LavaHammerItem());
	public static final RegistryObject<Item> TORNADO_AXE = REGISTRY.register("tornado_axe", () -> new TornadoAxeItem());
	public static final RegistryObject<Item> OCEANIC_TRIDENT = REGISTRY.register("oceanic_trident", () -> new OceanicTridentItem());
	public static final RegistryObject<Item> GREEN_STAFF = REGISTRY.register("green_staff", () -> new GreenStaffItem());
	public static final RegistryObject<Item> ANIMALS_HALBERD = REGISTRY.register("animals_halberd", () -> new AnimalsHalberdItem());
	public static final RegistryObject<Item> EMPTY_BATTERY = REGISTRY.register("empty_battery", () -> new EmptyBatteryItem());
	public static final RegistryObject<Item> FIRE_BATTERY = REGISTRY.register("fire_battery", () -> new FireBatteryItem());
	public static final RegistryObject<Item> AIR_BATTERY = REGISTRY.register("air_battery", () -> new AirBatteryItem());
	public static final RegistryObject<Item> EARTH_BATTERY = REGISTRY.register("earth_battery", () -> new EarthBatteryItem());
	public static final RegistryObject<Item> WATER_BATTERY = REGISTRY.register("water_battery", () -> new WaterBatteryItem());
	public static final RegistryObject<Item> ETHER_BATTERY = REGISTRY.register("ether_battery", () -> new EtherBatteryItem());
	public static final RegistryObject<Item> ICE_BATTERY = REGISTRY.register("ice_battery", () -> new IceBatteryItem());
	public static final RegistryObject<Item> LIGHTNING_BATTERY = REGISTRY.register("lightning_battery", () -> new LightningBatteryItem());
	public static final RegistryObject<Item> RIGHT_METAL_GAUNTLET = REGISTRY.register("right_metal_gauntlet", () -> new RightMetalGauntletItem());
	public static final RegistryObject<Item> LEFT_METAL_GAUNTLET = REGISTRY.register("left_metal_gauntlet", () -> new LeftMetalGauntletItem());
	public static final RegistryObject<Item> SOUND_BATTERY = REGISTRY.register("sound_battery", () -> new SoundBatteryItem());
	public static final RegistryObject<Item> CRYSTAL_BATTERY = REGISTRY.register("crystal_battery", () -> new CrystalBatteryItem());
	public static final RegistryObject<Item> LAVA_BATTERY = REGISTRY.register("lava_battery", () -> new LavaBatteryItem());
	public static final RegistryObject<Item> RAIN_BATTERY = REGISTRY.register("rain_battery", () -> new RainBatteryItem());
	public static final RegistryObject<Item> TORNADO_BATTERY = REGISTRY.register("tornado_battery", () -> new TornadoBatteryItem());
	public static final RegistryObject<Item> OCEAN_BATTERY = REGISTRY.register("ocean_battery", () -> new OceanBatteryItem());
	public static final RegistryObject<Item> PLANTS_BATTERY = REGISTRY.register("plants_battery", () -> new PlantsBatteryItem());
	public static final RegistryObject<Item> ANIMALS_BATTERY = REGISTRY.register("animals_battery", () -> new AnimalsBatteryItem());
	public static final RegistryObject<Item> METAL_BATTERY = REGISTRY.register("metal_battery", () -> new MetalBatteryItem());
	public static final RegistryObject<Item> LIGHT_ARMOR_HELMET = REGISTRY.register("light_armor_helmet", () -> new LightArmorItem.Helmet());
	public static final RegistryObject<Item> LIGHT_ARMOR_CHESTPLATE = REGISTRY.register("light_armor_chestplate", () -> new LightArmorItem.Chestplate());
	public static final RegistryObject<Item> LIGHT_ARMOR_LEGGINGS = REGISTRY.register("light_armor_leggings", () -> new LightArmorItem.Leggings());
	public static final RegistryObject<Item> LIGHT_ARMOR_BOOTS = REGISTRY.register("light_armor_boots", () -> new LightArmorItem.Boots());
	public static final RegistryObject<Item> LIGHT_BATTERY = REGISTRY.register("light_battery", () -> new LightBatteryItem());
	public static final RegistryObject<Item> LIGHT_SWORD = REGISTRY.register("light_sword", () -> new LightSwordItem());
	public static final RegistryObject<Item> SHADOW_ARMOR_HELMET = REGISTRY.register("shadow_armor_helmet", () -> new ShadowArmorItem.Helmet());
	public static final RegistryObject<Item> SHADOW_ARMOR_CHESTPLATE = REGISTRY.register("shadow_armor_chestplate", () -> new ShadowArmorItem.Chestplate());
	public static final RegistryObject<Item> SHADOW_ARMOR_LEGGINGS = REGISTRY.register("shadow_armor_leggings", () -> new ShadowArmorItem.Leggings());
	public static final RegistryObject<Item> SHADOW_ARMOR_BOOTS = REGISTRY.register("shadow_armor_boots", () -> new ShadowArmorItem.Boots());
	public static final RegistryObject<Item> SHADOW_BATTERY = REGISTRY.register("shadow_battery", () -> new ShadowBatteryItem());
	public static final RegistryObject<Item> DEPLETED_ENERGIUM_INGOT = REGISTRY.register("depleted_energium_ingot", () -> new DepletedEnergiumIngotItem());
	public static final RegistryObject<Item> DEPLETED_ENERGIUM_ORE = block(PowerModBlocks.DEPLETED_ENERGIUM_ORE);
	public static final RegistryObject<Item> DEPLETED_ENERGIUM_BLOCK = block(PowerModBlocks.DEPLETED_ENERGIUM_BLOCK);
	public static final RegistryObject<Item> RAW_DEPLETED_ENERGIUM = REGISTRY.register("raw_depleted_energium", () -> new RawDepletedEnergiumItem());
	public static final RegistryObject<Item> ENERGIUM_INGOT = REGISTRY.register("energium_ingot", () -> new EnergiumIngotItem());
	public static final RegistryObject<Item> ENERGIUM_BLOCK = block(PowerModBlocks.ENERGIUM_BLOCK);
	public static final RegistryObject<Item> SHADOW_SCYTHE = REGISTRY.register("shadow_scythe", () -> new ShadowScytheItem());
	public static final RegistryObject<Item> VACUUM_ARMOR_HELMET = REGISTRY.register("vacuum_armor_helmet", () -> new VacuumArmorItem.Helmet());
	public static final RegistryObject<Item> VACUUM_ARMOR_CHESTPLATE = REGISTRY.register("vacuum_armor_chestplate", () -> new VacuumArmorItem.Chestplate());
	public static final RegistryObject<Item> VACUUM_ARMOR_LEGGINGS = REGISTRY.register("vacuum_armor_leggings", () -> new VacuumArmorItem.Leggings());
	public static final RegistryObject<Item> VACUUM_ARMOR_BOOTS = REGISTRY.register("vacuum_armor_boots", () -> new VacuumArmorItem.Boots());
	public static final RegistryObject<Item> VACUUM_BATTERY = REGISTRY.register("vacuum_battery", () -> new VacuumBatteryItem());
	public static final RegistryObject<Item> BATTERY_CHARGER = block(PowerModBlocks.BATTERY_CHARGER);
	public static final RegistryObject<Item> VACUUM_DAGGER = REGISTRY.register("vacuum_dagger", () -> new VacuumDaggerItem());
	public static final RegistryObject<Item> ENERGIUM_UPGRADE_SMITHING_TEMPLATE = REGISTRY.register("energium_upgrade_smithing_template", () -> new EnergiumUpgradeSmithingTemplateItem());
	public static final RegistryObject<Item> ENERGIUM_PICKAXE = REGISTRY.register("energium_pickaxe", () -> new EnergiumPickaxeItem());
	public static final RegistryObject<Item> ENERGIUM_AXE = REGISTRY.register("energium_axe", () -> new EnergiumAxeItem());
	public static final RegistryObject<Item> ENERGIUM_SWORD = REGISTRY.register("energium_sword", () -> new EnergiumSwordItem());
	public static final RegistryObject<Item> ENERGIUM_SHOVEL = REGISTRY.register("energium_shovel", () -> new EnergiumShovelItem());
	public static final RegistryObject<Item> ENERGIUM_HOE = REGISTRY.register("energium_hoe", () -> new EnergiumHoeItem());
	public static final RegistryObject<Item> ENERGIUM_ARMOR_HELMET = REGISTRY.register("energium_armor_helmet", () -> new EnergiumArmorItem.Helmet());
	public static final RegistryObject<Item> ENERGIUM_ARMOR_CHESTPLATE = REGISTRY.register("energium_armor_chestplate", () -> new EnergiumArmorItem.Chestplate());
	public static final RegistryObject<Item> ENERGIUM_ARMOR_LEGGINGS = REGISTRY.register("energium_armor_leggings", () -> new EnergiumArmorItem.Leggings());
	public static final RegistryObject<Item> ENERGIUM_ARMOR_BOOTS = REGISTRY.register("energium_armor_boots", () -> new EnergiumArmorItem.Boots());
	public static final RegistryObject<Item> ENERGY_ARMOR_HELMET = REGISTRY.register("energy_armor_helmet", () -> new EnergyArmorItem.Helmet());
	public static final RegistryObject<Item> ENERGY_ARMOR_CHESTPLATE = REGISTRY.register("energy_armor_chestplate", () -> new EnergyArmorItem.Chestplate());
	public static final RegistryObject<Item> ENERGY_ARMOR_LEGGINGS = REGISTRY.register("energy_armor_leggings", () -> new EnergyArmorItem.Leggings());
	public static final RegistryObject<Item> ENERGY_ARMOR_BOOTS = REGISTRY.register("energy_armor_boots", () -> new EnergyArmorItem.Boots());
	public static final RegistryObject<Item> ENERGY_BATTERY = REGISTRY.register("energy_battery", () -> new EnergyBatteryItem());
	public static final RegistryObject<Item> ENERGIUM_CORE = REGISTRY.register("energium_core", () -> new EnergiumCoreItem());
	public static final RegistryObject<Item> ENERGY_STAFF = REGISTRY.register("energy_staff", () -> new EnergyStaffItem());
	public static final RegistryObject<Item> KEEPERS_BOX = block(PowerModBlocks.KEEPERS_BOX);
	public static final RegistryObject<Item> SUN_ARMOR_HELMET = REGISTRY.register("sun_armor_helmet", () -> new SunArmorItem.Helmet());
	public static final RegistryObject<Item> SUN_ARMOR_CHESTPLATE = REGISTRY.register("sun_armor_chestplate", () -> new SunArmorItem.Chestplate());
	public static final RegistryObject<Item> SUN_ARMOR_LEGGINGS = REGISTRY.register("sun_armor_leggings", () -> new SunArmorItem.Leggings());
	public static final RegistryObject<Item> SUN_ARMOR_BOOTS = REGISTRY.register("sun_armor_boots", () -> new SunArmorItem.Boots());
	public static final RegistryObject<Item> SUN_BATTERY = REGISTRY.register("sun_battery", () -> new SunBatteryItem());
	public static final RegistryObject<Item> SOLAR_BLADE = REGISTRY.register("solar_blade", () -> new SolarBladeItem());
	public static final RegistryObject<Item> MOON_ARMOR_HELMET = REGISTRY.register("moon_armor_helmet", () -> new MoonArmorItem.Helmet());
	public static final RegistryObject<Item> MOON_ARMOR_CHESTPLATE = REGISTRY.register("moon_armor_chestplate", () -> new MoonArmorItem.Chestplate());
	public static final RegistryObject<Item> MOON_ARMOR_LEGGINGS = REGISTRY.register("moon_armor_leggings", () -> new MoonArmorItem.Leggings());
	public static final RegistryObject<Item> MOON_ARMOR_BOOTS = REGISTRY.register("moon_armor_boots", () -> new MoonArmorItem.Boots());
	public static final RegistryObject<Item> MOON_BATTERY = REGISTRY.register("moon_battery", () -> new MoonBatteryItem());
	public static final RegistryObject<Item> MOON_DOUBLE_SIDED_SPEAR = REGISTRY.register("moon_double_sided_spear", () -> new MoonDoubleSidedSpearItem());
	public static final RegistryObject<Item> MOON_BLOCK = block(PowerModBlocks.MOON_BLOCK);
	public static final RegistryObject<Item> SPACE_ARMOR_HELMET = REGISTRY.register("space_armor_helmet", () -> new SpaceArmorItem.Helmet());
	public static final RegistryObject<Item> SPACE_ARMOR_CHESTPLATE = REGISTRY.register("space_armor_chestplate", () -> new SpaceArmorItem.Chestplate());
	public static final RegistryObject<Item> SPACE_ARMOR_LEGGINGS = REGISTRY.register("space_armor_leggings", () -> new SpaceArmorItem.Leggings());
	public static final RegistryObject<Item> SPACE_ARMOR_BOOTS = REGISTRY.register("space_armor_boots", () -> new SpaceArmorItem.Boots());
	public static final RegistryObject<Item> SPACE_BATTERY = REGISTRY.register("space_battery", () -> new SpaceBatteryItem());
	public static final RegistryObject<Item> CONSTELLATION_SWORD = REGISTRY.register("constellation_sword", () -> new ConstellationSwordItem());
	public static final RegistryObject<Item> TIME_ARMOR_HELMET = REGISTRY.register("time_armor_helmet", () -> new TimeArmorItem.Helmet());
	public static final RegistryObject<Item> TIME_ARMOR_CHESTPLATE = REGISTRY.register("time_armor_chestplate", () -> new TimeArmorItem.Chestplate());
	public static final RegistryObject<Item> TIME_ARMOR_LEGGINGS = REGISTRY.register("time_armor_leggings", () -> new TimeArmorItem.Leggings());
	public static final RegistryObject<Item> TIME_ARMOR_BOOTS = REGISTRY.register("time_armor_boots", () -> new TimeArmorItem.Boots());
	public static final RegistryObject<Item> TIME_BATTERY = REGISTRY.register("time_battery", () -> new TimeBatteryItem());
	public static final RegistryObject<Item> TIME_KHOPESH = REGISTRY.register("time_khopesh", () -> new TimeKhopeshItem());
	public static final RegistryObject<Item> CREATION_ARMOR_HELMET = REGISTRY.register("creation_armor_helmet", () -> new CreationArmorItem.Helmet());
	public static final RegistryObject<Item> CREATION_ARMOR_CHESTPLATE = REGISTRY.register("creation_armor_chestplate", () -> new CreationArmorItem.Chestplate());
	public static final RegistryObject<Item> CREATION_ARMOR_LEGGINGS = REGISTRY.register("creation_armor_leggings", () -> new CreationArmorItem.Leggings());
	public static final RegistryObject<Item> CREATION_ARMOR_BOOTS = REGISTRY.register("creation_armor_boots", () -> new CreationArmorItem.Boots());
	public static final RegistryObject<Item> CREATION_BATTERY = REGISTRY.register("creation_battery", () -> new CreationBatteryItem());
	public static final RegistryObject<Item> ENERGIUM_CONTROLLER = block(PowerModBlocks.ENERGIUM_CONTROLLER);
	public static final RegistryObject<Item> CREATION_STAFF = REGISTRY.register("creation_staff", () -> new CreationStaffItem());
	public static final RegistryObject<Item> AMPLIFIER_ORE = block(PowerModBlocks.AMPLIFIER_ORE);
	public static final RegistryObject<Item> AMPLIFIER_DROP = REGISTRY.register("amplifier_drop", () -> new AmplifierDropItem());
	public static final RegistryObject<Item> RAW_AMPLIFIER = REGISTRY.register("raw_amplifier", () -> new RawAmplifierItem());
	public static final RegistryObject<Item> CREATION_SWORD = REGISTRY.register("creation_sword", () -> new CreationSwordItem());
	public static final RegistryObject<Item> CREATION_PICKAXE = REGISTRY.register("creation_pickaxe", () -> new CreationPickaxeItem());
	public static final RegistryObject<Item> CREATION_AXE = REGISTRY.register("creation_axe", () -> new CreationAxeItem());
	public static final RegistryObject<Item> CREATION_HOE = REGISTRY.register("creation_hoe", () -> new CreationHoeItem());
	public static final RegistryObject<Item> CREATION_SHOVEL = REGISTRY.register("creation_shovel", () -> new CreationShovelItem());
	public static final RegistryObject<Item> DESTRUCTION_ARMOR_HELMET = REGISTRY.register("destruction_armor_helmet", () -> new DestructionArmorItem.Helmet());
	public static final RegistryObject<Item> DESTRUCTION_ARMOR_CHESTPLATE = REGISTRY.register("destruction_armor_chestplate", () -> new DestructionArmorItem.Chestplate());
	public static final RegistryObject<Item> DESTRUCTION_ARMOR_LEGGINGS = REGISTRY.register("destruction_armor_leggings", () -> new DestructionArmorItem.Leggings());
	public static final RegistryObject<Item> DESTRUCTION_ARMOR_BOOTS = REGISTRY.register("destruction_armor_boots", () -> new DestructionArmorItem.Boots());
	public static final RegistryObject<Item> DESTRUCTION_BATTERY = REGISTRY.register("destruction_battery", () -> new DestructionBatteryItem());
	public static final RegistryObject<Item> DESTRUCTION_BROADSWORD = REGISTRY.register("destruction_broadsword", () -> new DestructionBroadswordItem());
	public static final RegistryObject<Item> AMPLIFIER_BLOCK = block(PowerModBlocks.AMPLIFIER_BLOCK);
	public static final RegistryObject<Item> ENERGIUM_GOLEM_SPAWN_EGG = REGISTRY.register("energium_golem_spawn_egg", () -> new ForgeSpawnEggItem(PowerModEntities.ENERGIUM_GOLEM, -2242726, -8337805, new Item.Properties()));
	public static final RegistryObject<Item> BLOOD_ARMOR_HELMET = REGISTRY.register("blood_armor_helmet", () -> new BloodArmorItem.Helmet());
	public static final RegistryObject<Item> BLOOD_ARMOR_CHESTPLATE = REGISTRY.register("blood_armor_chestplate", () -> new BloodArmorItem.Chestplate());
	public static final RegistryObject<Item> BLOOD_ARMOR_LEGGINGS = REGISTRY.register("blood_armor_leggings", () -> new BloodArmorItem.Leggings());
	public static final RegistryObject<Item> BLOOD_ARMOR_BOOTS = REGISTRY.register("blood_armor_boots", () -> new BloodArmorItem.Boots());
	public static final RegistryObject<Item> BLOOD_SICKLE = REGISTRY.register("blood_sickle", () -> new BloodSickleItem());
	public static final RegistryObject<Item> BLOOD_BATTERY = REGISTRY.register("blood_battery", () -> new BloodBatteryItem());
	public static final RegistryObject<Item> RAW_DEPLETED_ENERGIUM_BLOCK = block(PowerModBlocks.RAW_DEPLETED_ENERGIUM_BLOCK);
	public static final RegistryObject<Item> RAW_AMPLIFIER_BLOCK = block(PowerModBlocks.RAW_AMPLIFIER_BLOCK);
	public static final RegistryObject<Item> TECHNOLOGY_ARMOR_HELMET = REGISTRY.register("technology_armor_helmet", () -> new TechnologyArmorItem.Helmet());
	public static final RegistryObject<Item> TECHNOLOGY_ARMOR_CHESTPLATE = REGISTRY.register("technology_armor_chestplate", () -> new TechnologyArmorItem.Chestplate());
	public static final RegistryObject<Item> TECHNOLOGY_ARMOR_LEGGINGS = REGISTRY.register("technology_armor_leggings", () -> new TechnologyArmorItem.Leggings());
	public static final RegistryObject<Item> TECHNOLOGY_ARMOR_BOOTS = REGISTRY.register("technology_armor_boots", () -> new TechnologyArmorItem.Boots());
	public static final RegistryObject<Item> TECHNOLOGY_BATTERY = REGISTRY.register("technology_battery", () -> new TechnologyBatteryItem());
	public static final RegistryObject<Item> TELEPORTATION_ARMOR_HELMET = REGISTRY.register("teleportation_armor_helmet", () -> new TeleportationArmorItem.Helmet());
	public static final RegistryObject<Item> TELEPORTATION_ARMOR_CHESTPLATE = REGISTRY.register("teleportation_armor_chestplate", () -> new TeleportationArmorItem.Chestplate());
	public static final RegistryObject<Item> TELEPORTATION_ARMOR_LEGGINGS = REGISTRY.register("teleportation_armor_leggings", () -> new TeleportationArmorItem.Leggings());
	public static final RegistryObject<Item> TELEPORTATION_ARMOR_BOOTS = REGISTRY.register("teleportation_armor_boots", () -> new TeleportationArmorItem.Boots());
	public static final RegistryObject<Item> TECHNO_PICKAXE = REGISTRY.register("techno_pickaxe", () -> new TechnoPickaxeItem());
	public static final RegistryObject<Item> TELEPORTATION_BATTERY = REGISTRY.register("teleportation_battery", () -> new TeleportationBatteryItem());
	public static final RegistryObject<Item> BLUE_PORTAL = block(PowerModBlocks.BLUE_PORTAL);
	public static final RegistryObject<Item> ORANGE_PORTAL = block(PowerModBlocks.ORANGE_PORTAL);
	public static final RegistryObject<Item> EXPLOSION_ARMOR_HELMET = REGISTRY.register("explosion_armor_helmet", () -> new ExplosionArmorItem.Helmet());
	public static final RegistryObject<Item> EXPLOSION_ARMOR_CHESTPLATE = REGISTRY.register("explosion_armor_chestplate", () -> new ExplosionArmorItem.Chestplate());
	public static final RegistryObject<Item> EXPLOSION_ARMOR_LEGGINGS = REGISTRY.register("explosion_armor_leggings", () -> new ExplosionArmorItem.Leggings());
	public static final RegistryObject<Item> EXPLOSION_ARMOR_BOOTS = REGISTRY.register("explosion_armor_boots", () -> new ExplosionArmorItem.Boots());
	public static final RegistryObject<Item> EXPLOSION_BATTERY = REGISTRY.register("explosion_battery", () -> new ExplosionBatteryItem());
	public static final RegistryObject<Item> EXPLOSION_MACE = REGISTRY.register("explosion_mace", () -> new ExplosionMaceItem());
	public static final RegistryObject<Item> AMBER_ARMOR_HELMET = REGISTRY.register("amber_armor_helmet", () -> new AmberArmorItem.Helmet());
	public static final RegistryObject<Item> AMBER_ARMOR_CHESTPLATE = REGISTRY.register("amber_armor_chestplate", () -> new AmberArmorItem.Chestplate());
	public static final RegistryObject<Item> AMBER_ARMOR_LEGGINGS = REGISTRY.register("amber_armor_leggings", () -> new AmberArmorItem.Leggings());
	public static final RegistryObject<Item> AMBER_ARMOR_BOOTS = REGISTRY.register("amber_armor_boots", () -> new AmberArmorItem.Boots());
	public static final RegistryObject<Item> AMBER_BATTERY = REGISTRY.register("amber_battery", () -> new AmberBatteryItem());
	public static final RegistryObject<Item> AMBER_STAFF = REGISTRY.register("amber_staff", () -> new AmberStaffItem());
	public static final RegistryObject<Item> AMBER_BLOCK = block(PowerModBlocks.AMBER_BLOCK);
	public static final RegistryObject<Item> AMPLIFIER_RING = REGISTRY.register("amplifier_ring", () -> new AmplifierRingItem());
	public static final RegistryObject<Item> CURSED_STONE = block(PowerModBlocks.CURSED_STONE);
	public static final RegistryObject<Item> CURSED_STONE_BRICKS = block(PowerModBlocks.CURSED_STONE_BRICKS);
	public static final RegistryObject<Item> CURSED_STONE_STAIRS = block(PowerModBlocks.CURSED_STONE_STAIRS);
	public static final RegistryObject<Item> CURSED_STONE_SLAB = block(PowerModBlocks.CURSED_STONE_SLAB);
	public static final RegistryObject<Item> CURSED_STONE_BRICKS_STAIRS = block(PowerModBlocks.CURSED_STONE_BRICKS_STAIRS);
	public static final RegistryObject<Item> CURSED_STONE_BRICKS_SLAB = block(PowerModBlocks.CURSED_STONE_BRICKS_SLAB);
	public static final RegistryObject<Item> CURSED_STONE_WALL = block(PowerModBlocks.CURSED_STONE_WALL);
	public static final RegistryObject<Item> CURSED_STONE_BRICKS_WALL = block(PowerModBlocks.CURSED_STONE_BRICKS_WALL);
	public static final RegistryObject<Item> POLISHED_CURSED_STONE = block(PowerModBlocks.POLISHED_CURSED_STONE);
	public static final RegistryObject<Item> POLISHED_CURSED_STONE_STAIRS = block(PowerModBlocks.POLISHED_CURSED_STONE_STAIRS);
	public static final RegistryObject<Item> POLISHED_CURSED_STONE_SLAB = block(PowerModBlocks.POLISHED_CURSED_STONE_SLAB);
	public static final RegistryObject<Item> POLISHED_CURSED_STONE_WALL = block(PowerModBlocks.POLISHED_CURSED_STONE_WALL);
	public static final RegistryObject<Item> CURSED_STONE_PILLAR = block(PowerModBlocks.CURSED_STONE_PILLAR);
	public static final RegistryObject<Item> CURSED_LANTERN = block(PowerModBlocks.CURSED_LANTERN);
	public static final RegistryObject<Item> COPYRIUM_INGOT = REGISTRY.register("copyrium_ingot", () -> new CopyriumIngotItem());
	public static final RegistryObject<Item> COPYRIUM_ORE = block(PowerModBlocks.COPYRIUM_ORE);
	public static final RegistryObject<Item> COPYRIUM_BLOCK = block(PowerModBlocks.COPYRIUM_BLOCK);
	public static final RegistryObject<Item> RAW_COPYRIUM = REGISTRY.register("raw_copyrium", () -> new RawCopyriumItem());
	public static final RegistryObject<Item> RAW_COPYRIUM_BLOCK = block(PowerModBlocks.RAW_COPYRIUM_BLOCK);
	public static final RegistryObject<Item> ELEMENTAL_POWER_GENERATOR = block(PowerModBlocks.ELEMENTAL_POWER_GENERATOR);
	public static final RegistryObject<Item> MIST_ARMOR_HELMET = REGISTRY.register("mist_armor_helmet", () -> new MistArmorItem.Helmet());
	public static final RegistryObject<Item> MIST_ARMOR_CHESTPLATE = REGISTRY.register("mist_armor_chestplate", () -> new MistArmorItem.Chestplate());
	public static final RegistryObject<Item> MIST_ARMOR_LEGGINGS = REGISTRY.register("mist_armor_leggings", () -> new MistArmorItem.Leggings());
	public static final RegistryObject<Item> MIST_ARMOR_BOOTS = REGISTRY.register("mist_armor_boots", () -> new MistArmorItem.Boots());
	public static final RegistryObject<Item> MIST_BATTERY = REGISTRY.register("mist_battery", () -> new MistBatteryItem());
	public static final RegistryObject<Item> MISTY_FAN = REGISTRY.register("misty_fan", () -> new MistyFanItem());
	public static final RegistryObject<Item> CURSED_VAULT = block(PowerModBlocks.CURSED_VAULT);
	public static final RegistryObject<Item> CURSED_KEY = REGISTRY.register("cursed_key", () -> new CursedKeyItem());
	public static final RegistryObject<Item> SAND_ARMOR_HELMET = REGISTRY.register("sand_armor_helmet", () -> new SandArmorItem.Helmet());
	public static final RegistryObject<Item> SAND_ARMOR_CHESTPLATE = REGISTRY.register("sand_armor_chestplate", () -> new SandArmorItem.Chestplate());
	public static final RegistryObject<Item> SAND_ARMOR_LEGGINGS = REGISTRY.register("sand_armor_leggings", () -> new SandArmorItem.Leggings());
	public static final RegistryObject<Item> SAND_ARMOR_BOOTS = REGISTRY.register("sand_armor_boots", () -> new SandArmorItem.Boots());
	public static final RegistryObject<Item> SAND_BATTERY = REGISTRY.register("sand_battery", () -> new SandBatteryItem());
	public static final RegistryObject<Item> SAND_SABER = REGISTRY.register("sand_saber", () -> new SandSaberItem());
	public static final RegistryObject<Item> SPEED_ARMOR_HELMET = REGISTRY.register("speed_armor_helmet", () -> new SpeedArmorItem.Helmet());
	public static final RegistryObject<Item> SPEED_ARMOR_CHESTPLATE = REGISTRY.register("speed_armor_chestplate", () -> new SpeedArmorItem.Chestplate());
	public static final RegistryObject<Item> SPEED_ARMOR_LEGGINGS = REGISTRY.register("speed_armor_leggings", () -> new SpeedArmorItem.Leggings());
	public static final RegistryObject<Item> SPEED_ARMOR_BOOTS = REGISTRY.register("speed_armor_boots", () -> new SpeedArmorItem.Boots());
	public static final RegistryObject<Item> SPEED_BATTERY = REGISTRY.register("speed_battery", () -> new SpeedBatteryItem());
	public static final RegistryObject<Item> HIGHSPEED_DAGGER = REGISTRY.register("highspeed_dagger", () -> new HighspeedDaggerItem());
	public static final RegistryObject<Item> POISON_ARMOR_HELMET = REGISTRY.register("poison_armor_helmet", () -> new PoisonArmorItem.Helmet());
	public static final RegistryObject<Item> POISON_ARMOR_CHESTPLATE = REGISTRY.register("poison_armor_chestplate", () -> new PoisonArmorItem.Chestplate());
	public static final RegistryObject<Item> POISON_ARMOR_LEGGINGS = REGISTRY.register("poison_armor_leggings", () -> new PoisonArmorItem.Leggings());
	public static final RegistryObject<Item> POISON_ARMOR_BOOTS = REGISTRY.register("poison_armor_boots", () -> new PoisonArmorItem.Boots());
	public static final RegistryObject<Item> POISON_BATTERY = REGISTRY.register("poison_battery", () -> new PoisonBatteryItem());
	public static final RegistryObject<Item> POISON_BOW = REGISTRY.register("poison_bow", () -> new PoisonBowItem());
	public static final RegistryObject<Item> MAGNET_ARMOR_HELMET = REGISTRY.register("magnet_armor_helmet", () -> new MagnetArmorItem.Helmet());
	public static final RegistryObject<Item> MAGNET_ARMOR_CHESTPLATE = REGISTRY.register("magnet_armor_chestplate", () -> new MagnetArmorItem.Chestplate());
	public static final RegistryObject<Item> MAGNET_ARMOR_LEGGINGS = REGISTRY.register("magnet_armor_leggings", () -> new MagnetArmorItem.Leggings());
	public static final RegistryObject<Item> MAGNET_ARMOR_BOOTS = REGISTRY.register("magnet_armor_boots", () -> new MagnetArmorItem.Boots());
	public static final RegistryObject<Item> MAGNET_BATTERY = REGISTRY.register("magnet_battery", () -> new MagnetBatteryItem());
	public static final RegistryObject<Item> MAGNET_CLAWS = REGISTRY.register("magnet_claws", () -> new MagnetClawsItem());
	public static final RegistryObject<Item> CURSED_LADDER = block(PowerModBlocks.CURSED_LADDER);
	public static final RegistryObject<Item> CURSED_LAMP = block(PowerModBlocks.CURSED_LAMP);
	public static final RegistryObject<Item> TELEPORTATION_BLADE = REGISTRY.register("teleportation_blade", () -> new TeleportationBladeItem());
	public static final RegistryObject<Item> ENERGIUM_VAULT = block(PowerModBlocks.ENERGIUM_VAULT);
	public static final RegistryObject<Item> ENERGIUM_KEY = REGISTRY.register("energium_key", () -> new EnergiumKeyItem());
	public static final RegistryObject<Item> MUSHROOMS_ARMOR_HELMET = REGISTRY.register("mushrooms_armor_helmet", () -> new MushroomsArmorItem.Helmet());
	public static final RegistryObject<Item> MUSHROOMS_ARMOR_CHESTPLATE = REGISTRY.register("mushrooms_armor_chestplate", () -> new MushroomsArmorItem.Chestplate());
	public static final RegistryObject<Item> MUSHROOMS_ARMOR_LEGGINGS = REGISTRY.register("mushrooms_armor_leggings", () -> new MushroomsArmorItem.Leggings());
	public static final RegistryObject<Item> MUSHROOMS_ARMOR_BOOTS = REGISTRY.register("mushrooms_armor_boots", () -> new MushroomsArmorItem.Boots());
	public static final RegistryObject<Item> MUSHROOMS_BATTERY = REGISTRY.register("mushrooms_battery", () -> new MushroomsBatteryItem());
	public static final RegistryObject<Item> MUSHROOMS_HAMMER = REGISTRY.register("mushrooms_hammer", () -> new MushroomsHammerItem());
	public static final RegistryObject<Item> PURPLE_MUSHROOM = block(PowerModBlocks.PURPLE_MUSHROOM);
	public static final RegistryObject<Item> MUSIC_DISC_CALL_OF_THE_PAST = REGISTRY.register("music_disc_call_of_the_past", () -> new MusicDiscCallOfThePastItem());
	public static final RegistryObject<Item> MERCURY_ARMOR_HELMET = REGISTRY.register("mercury_armor_helmet", () -> new MercuryArmorItem.Helmet());
	public static final RegistryObject<Item> MERCURY_ARMOR_CHESTPLATE = REGISTRY.register("mercury_armor_chestplate", () -> new MercuryArmorItem.Chestplate());
	public static final RegistryObject<Item> MERCURY_ARMOR_LEGGINGS = REGISTRY.register("mercury_armor_leggings", () -> new MercuryArmorItem.Leggings());
	public static final RegistryObject<Item> MERCURY_ARMOR_BOOTS = REGISTRY.register("mercury_armor_boots", () -> new MercuryArmorItem.Boots());
	public static final RegistryObject<Item> LUCK_COIN = REGISTRY.register("luck_coin", () -> new LuckCoinItem());
	public static final RegistryObject<Item> MUSIC_DISC_ANCIENT_MOOD = REGISTRY.register("music_disc_ancient_mood", () -> new MusicDiscAncientMoodItem());
	public static final RegistryObject<Item> RAW_ENERGIUM = REGISTRY.register("raw_energium", () -> new RawEnergiumItem());
	public static final RegistryObject<Item> ENERGIUM_ORE = block(PowerModBlocks.ENERGIUM_ORE);
	public static final RegistryObject<Item> ENERGIUM_DUST = REGISTRY.register("energium_dust", () -> new EnergiumDustItem());
	public static final RegistryObject<Item> RAW_ENERGIUM_BLOCK = block(PowerModBlocks.RAW_ENERGIUM_BLOCK);
	public static final RegistryObject<Item> MERCURY_BATTERY = REGISTRY.register("mercury_battery", () -> new MercuryBatteryItem());
	public static final RegistryObject<Item> MERCURY_BATTLE_AXE = REGISTRY.register("mercury_battle_axe", () -> new MercuryBattleAxeItem());
	public static final RegistryObject<Item> DEEPSLATE_DEPLETED_ENERGIUM_ORE = block(PowerModBlocks.DEEPSLATE_DEPLETED_ENERGIUM_ORE);
	public static final RegistryObject<Item> DEEPSLATE_ENERGIUM_ORE = block(PowerModBlocks.DEEPSLATE_ENERGIUM_ORE);
	public static final RegistryObject<Item> DEEPSLATE_AMPLIFIER_ORE = block(PowerModBlocks.DEEPSLATE_AMPLIFIER_ORE);
	public static final RegistryObject<Item> DEEPSLATE_COPYRIUM_ORE = block(PowerModBlocks.DEEPSLATE_COPYRIUM_ORE);
	public static final RegistryObject<Item> MERCURY_BALL = REGISTRY.register("mercury_ball", () -> new MercuryBallItem());
	public static final RegistryObject<Item> CHISELED_CURSED_STONE = block(PowerModBlocks.CHISELED_CURSED_STONE);
	public static final RegistryObject<Item> CURSED_STONE_CRACKED_BRICKS = block(PowerModBlocks.CURSED_STONE_CRACKED_BRICKS);
	public static final RegistryObject<Item> CURSED_STONE_CRACKED_BRICKS_SLAB = block(PowerModBlocks.CURSED_STONE_CRACKED_BRICKS_SLAB);
	public static final RegistryObject<Item> CURSED_STONE_CRACKED_BRICKS_STAIRS = block(PowerModBlocks.CURSED_STONE_CRACKED_BRICKS_STAIRS);
	public static final RegistryObject<Item> CURSED_STONE_CRACKED_BRICKS_WALL = block(PowerModBlocks.CURSED_STONE_CRACKED_BRICKS_WALL);
	public static final RegistryObject<Item> MUSIC_ARMOR_HELMET = REGISTRY.register("music_armor_helmet", () -> new MusicArmorItem.Helmet());
	public static final RegistryObject<Item> MUSIC_ARMOR_CHESTPLATE = REGISTRY.register("music_armor_chestplate", () -> new MusicArmorItem.Chestplate());
	public static final RegistryObject<Item> MUSIC_ARMOR_LEGGINGS = REGISTRY.register("music_armor_leggings", () -> new MusicArmorItem.Leggings());
	public static final RegistryObject<Item> MUSIC_ARMOR_BOOTS = REGISTRY.register("music_armor_boots", () -> new MusicArmorItem.Boots());
	public static final RegistryObject<Item> MUSIC_BATTERY = REGISTRY.register("music_battery", () -> new MusicBatteryItem());
	public static final RegistryObject<Item> MUSIC_GUITAR = REGISTRY.register("music_guitar", () -> new MusicGuitarItem());
	public static final RegistryObject<Item> FREAKING_PARSNIP = REGISTRY.register("freaking_parsnip", () -> new FreakingParsnipItem());
	public static final RegistryObject<Item> FREAKING_PARSNIP_BLOCK = block(PowerModBlocks.FREAKING_PARSNIP_BLOCK);
	public static final RegistryObject<Item> FREAKING_PARSHIP_SOUP = REGISTRY.register("freaking_parship_soup", () -> new FreakingParshipSoupItem());

	// Start of user code block custom items
	// End of user code block custom items
	private static RegistryObject<Item> block(RegistryObject<Block> block) {
		return REGISTRY.register(block.getId().getPath(), () -> new BlockItem(block.get(), new Item.Properties()));
	}

	@SubscribeEvent
	public static void clientLoad(FMLClientSetupEvent event) {
		event.enqueueWork(() -> {
			ItemProperties.register(FIRE_STONE.get(), new ResourceLocation("power:fire_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(AIR_STONE.get(), new ResourceLocation("power:air_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(EARTH_STONE.get(), new ResourceLocation("power:earth_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(WATER_STONE.get(), new ResourceLocation("power:water_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(ETHER_STONE.get(), new ResourceLocation("power:ether_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(ICE_STONE.get(), new ResourceLocation("power:ice_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(LIGHTNING_STONE.get(), new ResourceLocation("power:lightning_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(SOUND_STONE.get(), new ResourceLocation("power:sound_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(CRYSTAL_STONE.get(), new ResourceLocation("power:crystal_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(LAVA_STONE.get(), new ResourceLocation("power:lava_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(RAIN_STONE.get(), new ResourceLocation("power:rain_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(TORNADO_STONE.get(), new ResourceLocation("power:tornado_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(OCEAN_STONE.get(), new ResourceLocation("power:ocean_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(PLANTS_STONE.get(), new ResourceLocation("power:plants_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(ANIMALS_STONE.get(), new ResourceLocation("power:animals_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(METAL_STONE.get(), new ResourceLocation("power:metal_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(LIGHT_STONE.get(), new ResourceLocation("power:light_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(SHADOW_STONE.get(), new ResourceLocation("power:shadow_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(VACUUM_STONE.get(), new ResourceLocation("power:vacuum_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(SUN_STONE.get(), new ResourceLocation("power:sun_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(MOON_STONE.get(), new ResourceLocation("power:moon_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(SPACE_STONE.get(), new ResourceLocation("power:space_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(TIME_STONE.get(), new ResourceLocation("power:time_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(BLOOD_STONE.get(), new ResourceLocation("power:blood_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(TECHNOLOGY_STONE.get(), new ResourceLocation("power:technology_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(TELEPORTATION_STONE.get(), new ResourceLocation("power:teleportation_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(EXPLOSION_STONE.get(), new ResourceLocation("power:explosion_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(AMBER_STONE.get(), new ResourceLocation("power:amber_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(CREATION_STONE.get(), new ResourceLocation("power:creation_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(DESTRUCTION_STONE.get(), new ResourceLocation("power:destruction_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(MIST_STONE.get(), new ResourceLocation("power:mist_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(SAND_STONE.get(), new ResourceLocation("power:sand_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(SPEED_STONE.get(), new ResourceLocation("power:speed_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(POISON_STONE.get(), new ResourceLocation("power:poison_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(MAGNET_STONE.get(), new ResourceLocation("power:magnet_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(MUSHROOMS_STONE.get(), new ResourceLocation("power:mushrooms_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(MERCURY_STONE.get(), new ResourceLocation("power:mercury_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(MUSIC_STONE.get(), new ResourceLocation("power:music_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(PLAGUE_STONE.get(), new ResourceLocation("power:plague_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(BLUE_FLAME_STONE.get(), new ResourceLocation("power:blue_flame_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(GRAVITY_STONE.get(), new ResourceLocation("power:gravity_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(SMOKE_STONE.get(), new ResourceLocation("power:smoke_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(FORM_STONE.get(), new ResourceLocation("power:form_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(MIND_STONE.get(), new ResourceLocation("power:mind_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(GOLDEN_DUST_STONE.get(), new ResourceLocation("power:golden_dust_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(DARKNESS_STONE.get(), new ResourceLocation("power:darkness_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(ENERGY_STONE.get(), new ResourceLocation("power:energy_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
			ItemProperties.register(SPIRIT_STONE.get(), new ResourceLocation("power:spirit_stone_recharge"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) StoneGetRechargeStateProcedure.execute(itemStackToRender));
		});
	}
}
